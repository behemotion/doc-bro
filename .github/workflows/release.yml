name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine hatchling

    - name: Build package
      run: python -m build

    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Generate changelog excerpt
      id: changelog
      run: |
        # Extract version section from CHANGELOG.md if it exists
        if [ -f CHANGELOG.md ]; then
          # Get the section for this version
          changelog=$(sed -n "/^## \[.*${{ steps.version.outputs.version }}/,/^## \[/p" CHANGELOG.md | sed '$d' | tail -n +2)
          if [ -z "$changelog" ]; then
            changelog="See [CHANGELOG.md](CHANGELOG.md) for details."
          fi
        else
          changelog="Release v${{ steps.version.outputs.version }}"
        fi
        echo "content<<EOF" >> $GITHUB_OUTPUT
        echo "$changelog" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## What's New in ${{ github.ref_name }}

          ${{ steps.changelog.outputs.content }}

          ## Installation

          ```bash
          # Install latest version
          uvx install git+https://github.com/${{ github.repository }}

          # Install specific version
          uvx install git+https://github.com/${{ github.repository }}@${{ github.ref_name }}
          ```

          ## Requirements

          - Python 3.13+
          - uv/uvx tool ([installation instructions](https://docs.astral.sh/uv/getting-started/installation/))

          For manual installation or development setup, see the [README.md](README.md).
        files: |
          dist/*.tar.gz
          dist/*.whl
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-installation:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v2

    - name: Test uvx installation
      run: |
        # Install from the just-created release
        uvx install git+https://github.com/${{ github.repository }}@${{ github.ref_name }}

        # Basic smoke test
        docbro --version
        docbro --help

    - name: Test setup command
      run: |
        # Test setup wizard (non-interactive mode)
        docbro setup --non-interactive --skip-services || true