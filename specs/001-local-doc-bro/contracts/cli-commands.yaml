openapi: 3.0.0
info:
  title: DocBro CLI Commands Contract
  version: 1.0.0
  description: CLI command interface specifications for DocBro

paths:
  /cli/create:
    post:
      summary: Create a new documentation project
      operationId: createProject
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-_]{1,50}$'
        - name: url
          in: query
          required: true
          schema:
            type: string
            format: uri
        - name: depth
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 10
            default: 2
        - name: outdated-after
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 365
            default: 60
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid input parameters
        '409':
          description: Project name already exists

  /cli/crawl:
    post:
      summary: Start crawling a documentation project
      operationId: crawlProject
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: max-pages
          in: query
          schema:
            type: integer
            minimum: 1
            default: 100
        - name: rate-limit
          in: query
          schema:
            type: number
            minimum: 0.1
            maximum: 10.0
            default: 2.0
        - name: depth
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 10
      responses:
        '200':
          description: Crawl started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlSession'
        '404':
          description: Project not found
        '409':
          description: Another crawl is already in progress

  /cli/list:
    get:
      summary: List all documentation projects
      operationId: listProjects
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [all, ready, crawling, error, outdated]
            default: all
        - name: format
          in: query
          schema:
            type: string
            enum: [table, json]
            default: table
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectSummary'

  /cli/search:
    get:
      summary: Search documentation using RAG
      operationId: searchDocumentation
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
            minLength: 1
        - name: project
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: strategy
          in: query
          schema:
            type: string
            enum: [semantic, rerank, expand, decompose]
            default: semantic
        - name: format
          in: query
          schema:
            type: string
            enum: [text, json]
            default: text
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QueryResult'
        '404':
          description: Project not found

  /cli/rename:
    put:
      summary: Rename a documentation project
      operationId: renameProject
      parameters:
        - name: old-name
          in: query
          required: true
          schema:
            type: string
        - name: new-name
          in: query
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-_]{1,50}$'
      responses:
        '200':
          description: Project renamed successfully
        '404':
          description: Project not found
        '409':
          description: New name already exists

  /cli/remove:
    delete:
      summary: Remove a documentation project
      operationId: removeProject
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: confirm
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '204':
          description: Project removed successfully
        '404':
          description: Project not found
        '400':
          description: Confirmation required

  /cli/status:
    get:
      summary: Check system status and health
      operationId: getSystemStatus
      responses:
        '200':
          description: System status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'

  /cli/config:
    get:
      summary: Get configuration
      operationId: getConfig
      responses:
        '200':
          description: Current configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'

    put:
      summary: Update configuration
      operationId: updateConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: Configuration updated

components:
  schemas:
    Project:
      type: object
      required:
        - id
        - name
        - source_url
        - created_at
        - status
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        source_url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_crawled_at:
          type: string
          format: date-time
          nullable: true
        is_outdated:
          type: boolean
        outdated_after_days:
          type: integer
        embedding_model:
          type: string
        status:
          type: string
          enum: [creating, ready, crawling, error]
        metadata:
          type: object

    ProjectSummary:
      type: object
      required:
        - name
        - source_url
        - status
        - is_outdated
      properties:
        name:
          type: string
        source_url:
          type: string
        status:
          type: string
        is_outdated:
          type: boolean
        pages_count:
          type: integer
        last_crawled:
          type: string

    CrawlSession:
      type: object
      required:
        - id
        - project_id
        - started_at
        - status
      properties:
        id:
          type: string
          format: uuid
        project_id:
          type: string
          format: uuid
        started_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
          enum: [running, completed, failed, cancelled]
        pages_crawled:
          type: integer
        pages_failed:
          type: integer
        depth_limit:
          type: integer
        rate_limit:
          type: number
        error_message:
          type: string
          nullable: true

    QueryResult:
      type: object
      required:
        - page_url
        - page_title
        - content
        - relevance_score
      properties:
        page_url:
          type: string
          format: uri
        page_title:
          type: string
        content:
          type: string
        relevance_score:
          type: number
          minimum: 0
          maximum: 1
        rerank_score:
          type: number
          minimum: 0
          maximum: 1
          nullable: true

    SystemStatus:
      type: object
      required:
        - services
        - projects_count
      properties:
        services:
          type: object
          properties:
            qdrant:
              type: boolean
            redis:
              type: boolean
            ollama:
              type: boolean
            database:
              type: boolean
        projects_count:
          type: integer
        active_crawls:
          type: integer
        storage_used:
          type: string

    Configuration:
      type: object
      properties:
        default_depth:
          type: integer
        default_rate_limit:
          type: number
        default_outdated_days:
          type: integer
        embedding_model:
          type: string
        chunk_size:
          type: integer
        chunk_overlap:
          type: integer